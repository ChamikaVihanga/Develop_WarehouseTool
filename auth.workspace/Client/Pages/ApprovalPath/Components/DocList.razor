@inject HttpClient http


<MudGrid>
    @if(Docs !=null){
    <MudItem xs="12" lg="12" sm="12">
            <MudTextField DebounceInterval="500" OnDebounceIntervalElapsed="test" @bind-Value="@DocName" HelperText="@DocName" Label="Debounced" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Filled.Search" />
    </MudItem>
    <MudItem xs="12" lg="12" sm="12">
        <MudPaper Elevation="0" Width="300px">

                <MudList   SelectedValue="SelectedDoc" Dense="true" Clickable="true">
                <MudListItem Text="Registered Docs" Icon="@Icons.Filled.DocumentScanner" />

                <MudDivider />
              @foreach (ApprovalDocuments? a in Docs)
                {
                    <MudListItem OnClick="test"  Text="@a.DocumentName"></MudListItem>
                }
            </MudList>
     
    
        </MudPaper>
    </MudItem>
    }
</MudGrid>

@code {
    public string? DocName { get; set; }
    public List<ApprovalDocuments>? Docs { get; set; }

    MudSelectItem<ApprovalDocuments>? SelectedDoc { get; set; }

    void test(){

        Console.WriteLine(SelectedDoc?.Value.DocumentName);
    }

    protected override async Task OnInitializedAsync()
    {
        Docs = await http.GetFromJsonAsync<List<ApprovalDocuments>>("api/4/Get-Docuement-types");
    }

}
