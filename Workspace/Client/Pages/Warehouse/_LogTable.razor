@inject HttpClient Http



@if (Records == null)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
}
else
{
    <MudTable Items="Records" Hover="true" SortLabel="Sort By" Elevation="0" Dense="false">
        <HeaderContent>
            <MudTh><b>Task</b></MudTh>
            <MudTh><b>Start Time</b></MudTh>
            <MudTh><b>End Time</b></MudTh>           
            <MudTh><b>Achivement</b></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.OperationList.Name </MudTd >
            <MudTd>@context.StartTime.ToString("T") </MudTd>
            <MudTd>@context.EndTime.ToString("T") </MudTd>
            <MudTd >@context.Achivement</MudTd>
            @*<MudTd DataLabel="Temp. (F)">@context.Efficiency</MudTd>*@            
            @*DataLabel="Date"
            DataLabel="Temp. (C)"
            DataLabel="Summary"*@
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
}



@code {
    private OperationRecord[]? Records  { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Records = await Http.GetFromJsonAsync<OperationRecord[]>("api/OperationRecords");
    }

}



