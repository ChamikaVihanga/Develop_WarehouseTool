@page "/ResourceAndFacility/"
@inject IReFaRequestService ReFaRequestService
@inject NavigationManager NavigationManager


<h3>Request</h3>

@if (false) //(ProductService.AdminProducts == null)
{
    <span>Loading Products...</span>
}
else
{

    <button class="btn btn-primary float-end" @onclick="CreateReFaRequest">
        <i class="oi oi-plus"></i> Create New Request
    </button>
    @*<table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Product</th>
                <th>Variant</th>
                <th>Price</th>
                <th>Visible</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="ProductService.AdminProducts" Context="product">
                <tr>
                    <td>
                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                    {
                        <img src="@product.ImageUrl" />
                    }
                    else if (product.Images.Count > 0)
                    {
                        <img src="@product.Images[0].Data" />
                    }
                </td>
                <td>@product.Title</td>
                <td>
                    @foreach (var variant in product.Variants)
                    {
                        <span>@variant.ProductType.Name</span>

                        <br />
                    }
                </td>
                <td>
                    @foreach (var variant in product.Variants)
                    {
                        <span>@variant.Price</span>

                        <br />
                    }
                </td>
                <td>@(product.Visible ? "✔️" : "")</td>
                <td>
                    <button class="btn btn-primary" @onclick="(() => EditProduct(product.Id))">
                        <i class="oi oi-pencil"></i>
                    </button>
                </td>
            </tr>
        </Virtualize>
    </tbody>
</table>*@
}


@code {
    protected override async Task OnInitializedAsync()
    {
        await ReFaRequestService.GetReFaRequests();
    }

    void CreateReFaRequest()
    {
        NavigationManager.NavigateTo("ResourceAndFacility/Request");
    }
}
